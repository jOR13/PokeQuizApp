name: Ruby

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.3.1']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Run linter
      run: bundle exec rubocop --parallel

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.3.1']

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: poke_quiz_app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install dependencies
      run: bundle install

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 1
        done

    - name: Set up the database
      run: |
        bin/rails db:create db:schema:load --trace

    - name: Run tests
      run: bundle exec rake test
